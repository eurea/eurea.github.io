{"version":3,"sources":["webpack://src/styles/ExperienceCalculator.scss","webpack://node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://src/styles/_colors.scss","webpack://src/styles/Settings.scss","webpack://src/styles/App.scss","webpack://src/index.scss"],"names":[],"mappings":"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","file":"main.6b3994bb.chunk.css","sourcesContent":["@import \"colors\";\n@import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n@import \"~bootstrap/scss/mixins/breakpoints\";\n\n.checkbox-col {\n  display: flex;\n\n  @include media-breakpoint-between(sm, sm) {\n    margin-top: 1rem;\n  }\n}\n\n@include media-breakpoint-down(sm) {\n  .tooltip-col {\n    margin-top: 15px;\n  }\n}\n\n.will-hide {\n  transition: all .2s ease-in-out;\n\n  &[hidden] {\n    display: initial !important;\n    opacity: 0;\n\n    @include media-breakpoint-down(sm) {\n      display: none !important;\n    }\n  }\n}\n\n.disable-ff-shadow {\n  box-shadow: none;\n}\n\n.radio-tile-group {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n  padding-left: 15px;\n\n  @include media-breakpoint-down(xs) {\n    width: 100%;\n  }\n\n  .input-container {\n    position: relative;\n    height: 32px;\n    width: 120px;\n    margin: 0 15px 0 0;\n\n    @include media-breakpoint-up(sm) {\n      &:last-child {\n        margin: 0;\n      }\n    }\n\n    @include media-breakpoint-down(xs) {\n      margin-bottom: 15px;\n      width: 100%;\n    }\n\n    .radio-button {\n      opacity: 0;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      cursor: pointer;\n    }\n\n    .radio-tile {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      padding: 1rem;\n      border: 2px solid $accent-blue;\n      border-radius: 4px;\n    }\n\n    .radio-tile-label {\n      margin: 0;\n      color: $accent-blue;\n      font-weight: 600;\n      font-size: 0.75rem;\n      text-align: center;\n      letter-spacing: 1px;\n      text-transform: uppercase;\n    }\n\n    .radio-button:checked + .radio-tile {\n      color: white;\n      background-color: $accent-blue;\n      border: 2px solid $accent-blue;\n      // transform: scale(1.1);\n\n      .radio-tile-label {\n        color: white;\n        background-color: $accent-blue;\n      }\n    }\n  }\n}\n\n.checkbox-label {\n  display: inline-block;\n  color: #fff;\n  cursor: pointer;\n  position: relative;\n\n  .checkbox {\n    display: inline-block;\n    position: relative;\n    background-color: transparent;\n    width: 25px;\n    height: 25px;\n    transform-origin: center;\n    border: 2px solid $accent-blue;\n    border-radius: 4px;\n    vertical-align: -6px;\n    margin-right: 10px;\n    transition: background-color 150ms;\n\n    &:before {\n      content: \"\";\n      width: 0;\n      height: 2px;\n      border-radius: 2px;\n      background: $accent-blue;\n      position: absolute;\n      transform: rotate(45deg);\n      top: 10px;\n      left: 7px;\n      transition: width 50ms ease 50ms;\n      transform-origin: 0 0;\n    }\n\n    &:after {\n      content: \"\";\n      width: 0;\n      height: 2px;\n      border-radius: 2px;\n      background: $accent-blue;\n      position: absolute;\n      transform: rotate(305deg);\n      top: 14px;\n      left: 8px;\n      transition: width 50ms ease;\n      transform-origin: 0 0;\n    }\n  }\n}\n\n.checkbox-input[type=\"checkbox\"] {\n  display: none;\n\n  &:checked {\n    + .checkbox-label {\n      .checkbox {\n        background-color: $accent-blue;\n\n        &:after {\n          width: 10px;\n          background: #fff;\n          transition: width 150ms ease 150ms;\n        }\n\n        &:before {\n          width: 5px;\n          background: #fff;\n          transition: width 150ms ease;\n        }\n      }\n    }\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","$accent-blue: #0288D1;\n$darker-blue: #005B9F;\n","@import \"colors\";\n\n.switch input {\n  display: none;\n}\n\n.switch {\n  width: 60px;\n  height: 30px;\n  position: relative;\n  display: inline-block;\n  margin-bottom: 0;\n}\n\n.language-label {\n  top: 4px;\n  overflow: hidden;\n  position: relative;\n}\n\n.slider {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  cursor: pointer;\n  position: absolute;\n  border-radius: 28px;\n  background-color: white;\n  -webkit-transition: .3s;\n  -moz-transition: .3s;\n  -ms-transition: .3s;\n  -o-transition: .3s;\n  transition: .3s;\n}\n\n.slider:before {\n  content: \"\";\n  left: 6px;\n  bottom: 4px;\n  width: 22px;\n  height: 22px;\n  position: absolute;\n  border-radius: 50%;\n  transition: .3s;\n  background-color: $accent-blue;\n}\n\ninput:checked + .slider:before {\n  background-color: red;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -moz-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  -o-transform: translateX(26px);\n  transform: translateX(26px);\n}\n","@import \"colors\";\n\n.container {\n  padding-left: 0;\n  padding-right: 0;\n  background-color: #E0E0E0;\n  border-radius: 4px;\n}\n\n.nav-tabs {\n  border-radius: 4px 4px 0 0;\n  background-color: $accent-blue;\n\n  & .nav-item {\n    border: none;\n    margin: 0;\n  }\n}\n\n.nav-tabs .nav-link {\n  position: relative;\n  color: #000;\n  transition: .25s all;\n\n  &:hover {\n    border: none;\n    background-color: white;\n  }\n\n  &::after {\n    content: \"\";\n    left: 0;\n    width: 100%;\n    height: 2px;\n    bottom: -1px;\n    position: absolute;\n    background: $darker-blue;\n    transform: scale(0, 1);\n    transition: all .25s ease;\n  }\n\n  &.active::after,\n  &:hover::after {\n    transform: scale(1, 1);\n  }\n}\n","@import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n@import \"~bootstrap/scss/mixins/breakpoints\";\n\nbody {\n  background: url(\"./assets/bg.jpg\") no-repeat center fixed;\n}\n\n@include media-breakpoint-up(sm) {\n  html {\n    height: 100vh;\n  }\n\n  body {\n    height: 100%;\n    overflow: hidden;\n    background-size: cover;\n  }\n}\n\n.tab-pane {\n  padding: 15px;\n}\n\n.no-wrap {\n  white-space: nowrap;\n}\n\n.input-sm {\n  padding: 5px 10px;\n  max-width: 120px;\n}\n"]}